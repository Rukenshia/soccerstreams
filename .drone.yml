workspace:
  base: /go
  path: src/github.com/Rukenshia/soccerstreams

pipeline:
  dependencies:
    group: prep
    image: golang
    commands:
    - make deps

  temp_versions:
    group: prep
    image: alpine/git
    commands:
    - v=$(git rev-parse --short HEAD)
    - echo "-$v" >> cmd/agent/version
    - echo "-$v" >> cmd/sweeper/version
    - echo "-$v" >> cmd/web/version
    - sed -i "s#soccerstreams-web/agent:.*#soccerstreams-web/agent:$(cat cmd/agent/version)#" k8s/agent.yml
    - sed -i "s#soccerstreams-web/sweeper:.*#soccerstreams-web/sweeper:$(cat cmd/sweeper/version)#" k8s/sweeper.yml
    - sed -i "s#soccerstreams-web/web:.*#soccerstreams-web/web:$(cat cmd/web/version)#" k8s/web.yml

  ca_certs:
    group: prep
    image: alpine
    secrets: [ca_certificates]
    commands:
    - echo "$CA_CERTIFICATES" > cmd/agent/ca-certificates.pem
    - echo "$CA_CERTIFICATES" > cmd/sweeper/ca-certificates.pem

  test:
    group: qa
    image: golang
    commands:
    - make test

  lint:
    group: qa
    image: golang
    commands:
    - make lint || exit 0

  build-agent:
    group: build
    image: golang
    pull: true
    environment:
      GOPATH: /go
      DOCKER_HOST: tcp://docker:2375
    secrets:
    - source: gcr
      target: GCR_SERVICE_ACCOUNT
    commands:
    - cd cmd/agent && make bin
    - ldd cmd/agent/agent

  docker-agent:
    group: docker
    image: ruken/docker-go-gcr:latest
    pull: true
    environment:
      GOPATH: /go
      DOCKER_HOST: tcp://docker:2375
    secrets:
    - source: gcr
      target: GCR_SERVICE_ACCOUNT
    commands:
    - f=$(mktemp); echo "$GCR_SERVICE_ACCOUNT" > $f && gcloud auth activate-service-account --key-file $f
    - make agent
    - ldd cmd/agent/agent
  # build-sweeper:
  #   group: build
  #   image: ruken/docker-go-gcr:latest
  #   pull: true
  #   environment:
  #     GOPATH: /go
  #     DOCKER_HOST: tcp://docker:2375
  #   secrets:
  #   - source: gcr
  #     target: GCR_SERVICE_ACCOUNT
  #   commands:
  #   - f=$(mktemp); echo "$GCR_SERVICE_ACCOUNT" > $f && gcloud auth activate-service-account --key-file $f
  #   - make sweeper
  # build-web:
  #   group: build
  #   image: ruken/docker-go-gcr:latest
  #   pull: true
  #   environment:
  #     GOPATH: /go
  #     DOCKER_HOST: tcp://docker:2375
  #   secrets:
  #   - source: gcr
  #     target: GCR_SERVICE_ACCOUNT
  #   commands:
  #   - f=$(mktemp); echo "$GCR_SERVICE_ACCOUNT" > $f && gcloud auth activate-service-account --key-file $f
  #   - export PATH=$GOPATH/bin:$PATH
  #   - make deps web
  
  deploy:
    image: ruken/docker-gke-kubectl
    secrets:
    - source: k8s
      target: K8S_SERVICE_ACCOUNT
    commands:
    - f=$(mktemp); echo "$K8S_SERVICE_ACCOUNT" > $f && gcloud auth activate-service-account --key-file $f
    - gcloud container clusters get-credentials cluster-1 --zone europe-west1-b --project soccerstreams-web
    - make deploy

  
  notify:
    branch: master
    image: appleboy/drone-telegram
    format: html
    secrets:
    - source: telegram_user
      target: telegram_to
    - source: telegram_token
      target: telegram_token
    when:
      status: [ success, failure ]
    message: |
      {{#success build.status}}
        &#x1F680 build {{repo.name}}#{{build.number}} succeeded.
      {{else}}
        &#x1F534 build {{repo.name}}#{{build.number}} failed.
      {{/success}}

services:
  docker:
    image: docker:dind
    command: [ "--tls=false" ]
    privileged: true