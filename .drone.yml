workspace:
  base: /go
  path: src/github.com/Rukenshia/soccerstreams

pipeline:
  dependencies:
    image: golang
    commands:
    - go get -v ./...

  test:
    group: qa
    image: golang
    commands:
    - go test ./...

  lint:
    group: qa
    image: golang
    commands:
    - go get github.com/alecthomas/gometalinter
    - gometalinter --install
    - gometalinter --fast ./... || exit 0

  build-agent:
    group: build
    image: golang
    commands:
    - cd cmd/agent
    - GOOS=linux go build
  build-sweeper:
    group: build
    image: golang
    commands:
    - cd cmd/sweeper
    - GOOS=linux go build
  build-web:
    group: build
    image: golang
    commands:
    - go get github.com/revel/cmd
    - cd cmd/web
    - GOOS=linux revel package github.com/Rukenshia/soc-web prod

  upload:
    branch: master
    image: appleboy/drone-scp
    source: soccerstreams/pkg
    target: "/root/soccerstreams/pkg/drone_ci_${DRONE_COMMIT_SHA}"
    host: server.in.fkn.space
    secrets:
    - ssh_username
    - ssh_key

  run:
    branch: master
    image: appleboy/drone-ssh
    host: server.in.fkn.space
    secrets:
    - ssh_username
    - ssh_key
    script:
    - cd soccerstreams/pkg
    - killall soccerstreams/pkg
    - "mv drone_ci_${DRONE_COMMIT_SHA}/soccerstreams/pkg soccerstreams/pkg"
    - "rm -r drone_ci_${DRONE_COMMIT_SHA}"
    - "unlink soccerstreams/pkg.latest.log"
    - "ln -s ./soccerstreams/pkg.${DRONE_COMMIT_SHA}.log soccerstreams/pkg.latest.log"
    - ./soccerstreams/pkg > "./soccerstreams/pkg.${DRONE_COMMIT_SHA}.log" 2>&1 &

  notify:
    branch: master
    image: appleboy/drone-telegram
    format: html
    secrets:
    - source: telegram_user
      target: telegram_to
    - source: telegram_token
      target: telegram_token
    when:
      status: [ success, failure ]
    message: |
      {{#success build.status}}
        &#x1F680 build {{repo.name}}#{{build.number}} succeeded.
      {{else}}
        &#x1F534 build {{repo.name}}#{{build.number}} failed.
      {{/success}}
